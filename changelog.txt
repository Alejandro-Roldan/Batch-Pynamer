V. 06.00:
	- Highly optimized the treeview sorting. In previous versions the elements sorting was considerably slow (although only noticiable when there were many many items, specially when using the recursive option), so it has been completly changed to a much much faster implementation wich barely adds any overhead. This was achived by creating the list of items then sorting it then inserting the items in the treeview, rather than inserting the item to the treeview as they were read and then sorting the treeview by moving each item to a new index.
	- Change the insertNode to get the entry instead of the values
	- Added an origin node in the folder treeview
	- Added option for when renaming from a file to wrap over once all the items in the file have been used
	- Added a Reset button to the filtering widget
	- Change order for some menu options
	- Added a few key bindings for refreshing the views that had been forgotten to be added although the accelerators where there
	- Added slight padding around the reset buttons
	- Added key binding for exiting the application
	- Added key binding for applying command
	- Added error handling for when giving a path to the program from the terminal
	- Removed unused classes
	- Fixed performance issue when selecting, deselecting and inverting selection of many many elements
	- Fixed bug where trying to add an image to the metadata would fail
	- Fixed bug where reseting wouldn't reset the rename from file widget
	- Fixed bug where it would raise an accesibility error and it wouldn't get catched
	- Fixed bug where using the Crop option from the Remove (5) group would remove everything if there was no occurrence of what we wanted to remove
	- Fixed bug where undoing rename with nothing selected in the folder_view would remove the whole folder_view
	- Cleaned code for readability

V. 05.08:
	- Added Renaming from file
	- Added Renaming from the bottom to the top
	- Fixed bug where renaming with recursiveness would name the folders before the files in them so then i couldn't rename the files because the path no longer exists
	- Changed filtering call to act for the mask and ext entries when losing focus from them, so as to not load the whole tree with each keystroke
	- Added key bindings for menu options
	- Added accelerators (display the key binding next to the menubar options)

V. 05.06:
	- Implemented recursiveness to the file treeview
	- Implemented filtering the file treeview (+ the folder treeview for hidden folders)
	- Added a filtering treeview widget
	- Cleaned code


V. 05.05:
	- Optimized loading directories calls
	- Added colors to rows, change to green when they change name (doesnt work because of bug from tkinter)
	- Since we need a defined limit for the spinboxes I decided to add a check for filename length limit (and double it for safeness) and to use it instead of an arbitrary lenght number (also trying to rename to something beyond the filename lenght gets catched by the OsError handling that was already implemented for catching invalid chars)
	
V. 05:
	- Added the ability to hide and show hidden files instead of always showing them
	- Added Display menu
	- Added Display Menu Function to hide and show hidden files
	- Added the ability to show Files before Directories instead of always showing Directories before Files
	- Aded Display Menu function to change directories before files and viceversa
	- Added support for MP4 metadata
	- Added enumerate where possible for more concise code

V. 04.05:
	- Optimized code conditionals and error handling in the use of metadata values for the rename
	- Made the creation of the configuration folder more cross-platform
	- If theres any problem reaching the configuration folder the command related functions get disabled at startup
	- Added print statements clarity
	- Updated PROJECT_URL
	- Error handling for invalid characters
	- Changed the rename function to use os.rename() instead of shutil.move() (that technically uses os.rename under the hood) to better catch naming exceptions whith forbidden characters and the like
	- Removed "import shutil" since it wasn't being used anymore
	- Highly optimized treeview loading with "os.scandir"

V. 04:
	- Changed project name to "Batch Pynamer"
	- Added the ability to rename files using metadata values
	- Added function to set the metadata's title and tracknumber from the filename (splits the filename at the first apparition of "-" and sets the first part to be the tracknumber and the second to be the title)
	- Added File Menu Function to set the title and the tracknumber metadata
	- Now when applying changes to the metadata it automatically reloads

V. 03.05:
	- Added the ability to open the program in a specific folder calling it with the folder as an argument
	- Set up a default PATH constant to fallback
	- Changed path.split('/') to os.path.basename() and os.path.dirname() accordingly (which also allows to use in windows)

V. 03:
	- Added the function to format the tracknumber metadata field to remove anything after "/" (inclusive) and add 0s left pading to have 2 digits
	- Added File Menu Function to format the tracknumber
	- Added ability to create new metadata tags
	- Added Error Handling for ID3 when the tag doesn't have an valid name
	- Ordered functions in new groups that make more sense

V. 02.08:
	- Changed the configuration folder path to have a "/" at the end
	- Fixed bug where the file menu option "Refresh Tree" would just empty the tree instead of refreshing it
	- Fixed bug where you wouldn't be able to use the rename application without the metadata imports caused by the options in the menu bar
	- Created Error class for trying to rename to an already existing file name

V. 02.07:
	- Changed Naming convention for the main file to just be BatchRenamerpy.py
	- Added Menu Bar
	- Added File menu
	- Added Selection Menu
	- Added Comands support (saving, loading, chain commands and applying directly)
	- Added About menu button
	- When you Apply a command it doesn't lose the entries configuration that you had
	- Added Undo Name Changes functionality
	- Added Error Pop Up window
	- Added several error handlings when there is no selection and corresponding info msgs
	- Added code comments

V. 02.06:
	- Fixed bug where the spinbox that should begin at 1 would initialize at 0. I have solved it for my program by adding a line right after creation that sets them to 1, but it's something that the tkinter developers should fix themselves. Now I remember that's why I used tk.spinbox instead of ttk.spinbox
	- Made the metadata tab extend across the whole horizontal space
	- Made the labels in the metadata entry list not exceed a certain size
	- Added Info Bar Message when you refresh the folder navigation treeview
	- Added Info Bar Message when you copy a file path with right click over it
	- Added code comments

V. 02.05:
	- Now it's possible to change MP3s metadata too
	- Fixed bug that didn't let you open the extended regular expressions window
	- Changed the visuals of the extended regular expression window so it's consistent with the rest of the program
	- Extended the treeviews to fill the whole horizontal space
	- Metadata modules are now optional to run the program. If they are not installed you are still able to use the rest of the functionalities
	- Untabbed comments where necessary so they don't hide when automatic code folding (a bit of a failure though, still folds the bullet points inside the comments)

V. 02:
	- Added a scrollbar for the metadata entries widget so when a file has many entries it doesn't make a bigger window
	- Added an entry at the top of the treeviews to see the path of the active folder and being able to access any folder writing its path and hiting return
	- Added a button to refresh the folder treeview at will
	- Got rid of "from tkinter import *" for a better "import tkinter as tk"
	- Removed extra imports that weren't being used
	- Changed spinboxes from tk to ttk so they use the same color pallette as the rest of the program
	- Extended the info bar across the whole window horizontally

V. 01.02:
	- Added an info bar at the bottom to show number of items and number of selected items plus a last action message
	- Optimized the number of for loops that the program goes trough
	- Cleaner code, separated in more functions

V. 01.01:
	- Created an entry list that stays in the ui constantly
	- Organized the widgets in a more packed way

V. 01:
	- Fixed bug where the metadata image wouldn't show
	- First mostly Totally working version
	- Cleaner code

V. b.1.0.3:
	- Clean and organize the classes for an easier use and more object oriented
	- Added permanent image display size
	- Added entry for the new image to replace
	- Added label to show metadata image size or if there is no image or different images in diferent selected files

V. a.0.2:
	- Reorganize the functions and methods
	- Create the Metadata structure and class
	- Added metadata entries list
	- Added metadata image
	
V. a.0.1:
	- First basic running version of the program
	- All the rename widget created
	- Treeview and file selection created
	- Final Rename button created and working
